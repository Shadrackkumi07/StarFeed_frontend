{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useAuth}from'../auth/AuthProvider';import api from'../api';import'./Comments.css';// ReplyForm component to isolate reply input state\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ReplyForm=_ref=>{let{parentId,onSubmit,onCancel}=_ref;const[text,setText]=useState('');const handleSubmit=e=>{e.preventDefault();onSubmit(text,parentId);setText('');};return/*#__PURE__*/_jsxs(\"form\",{className:\"reply-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"textarea\",{className:\"comment-input\",rows:\"2\",placeholder:\"Write a reply\\u2026\",value:text,onChange:e=>setText(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{className:\"comment-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"comment-save-btn\",children:\"Post Reply\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:onCancel,className:\"comment-cancel-btn\",children:\"Cancel\"})]})]});};export default function Comments(_ref2){let{itemId}=_ref2;const{currentUser}=useAuth();// flat list & tree\nconst[flatComments,setFlatComments]=useState([]);const[commentsTree,setCommentsTree]=useState([]);// UI state\nconst[loading,setLoading]=useState(true);const[error,setError]=useState('');// new top-level comment\nconst[newText,setNewText]=useState('');// replies: which comment we’re replying to\nconst[replyTo,setReplyTo]=useState(null);// editing existing comment\nconst[editingId,setEditingId]=useState(null);const[editText,setEditText]=useState('');// 1. Build nested tree from flat list\nconst buildTree=list=>{const map={};list.forEach(c=>{map[c._id]={...c,replies:[]};});const roots=[];list.forEach(c=>{if(c.parentId&&map[c.parentId]){map[c.parentId].replies.push(map[c._id]);}else{roots.push(map[c._id]);}});return roots;};// 2. Fetch flat comments & build tree\nconst fetchComments=async()=>{setLoading(true);setError('');try{const resp=await api.get('/comments',{params:{itemId}});setFlatComments(resp.data);setCommentsTree(buildTree(resp.data));}catch{setError('Could not load comments');}finally{setLoading(false);}};useEffect(()=>{fetchComments();},[itemId]);// 3. Post (new or reply)\nconst postComment=async function(text){let parentId=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(!text.trim())return;try{const token=await currentUser.getIdToken();await api.post('/comments',{itemId,text,parentId},{headers:{Authorization:`Bearer ${token}`}});// clear appropriate field\nif(parentId){setReplyTo(null);}else{setNewText('');}fetchComments();}catch{setError('Could not post comment');}};// 4. Update\nconst updateComment=async()=>{if(!editText.trim())return;try{const token=await currentUser.getIdToken();await api.put(`/comments/${editingId}`,{text:editText},{headers:{Authorization:`Bearer ${token}`}});setEditingId(null);setEditText('');fetchComments();}catch{setError('Could not update comment');}};// 5. Delete\nconst deleteComment=async id=>{try{const token=await currentUser.getIdToken();await api.delete(`/comments/${id}`,{headers:{Authorization:`Bearer ${token}`}});fetchComments();}catch{setError('Could not delete comment');}};// 6. Recursive node\nconst CommentNode=_ref3=>{let{node,depth=0}=_ref3;return/*#__PURE__*/_jsxs(\"li\",{className:\"comment-card\",style:{marginLeft:depth*16},children:[editingId===node._id?/*#__PURE__*/_jsxs(\"div\",{className:\"comment-body\",children:[/*#__PURE__*/_jsx(\"textarea\",{className:\"comment-input\",rows:\"2\",value:editText,onChange:e=>setEditText(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{className:\"comment-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:updateComment,className:\"comment-save-btn\",children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setEditingId(null),className:\"comment-cancel-btn\",children:\"Cancel\"})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"comment-body\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"comment-author\",children:currentUser.email.split('@')[0]}),/*#__PURE__*/_jsx(\"p\",{className:\"comment-text\",children:node.text}),/*#__PURE__*/_jsx(\"div\",{className:\"comment-meta\",children:/*#__PURE__*/_jsx(\"span\",{className:\"comment-time\",children:new Date(node.createdAt).toLocaleString()})}),/*#__PURE__*/_jsxs(\"div\",{className:\"comment-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setReplyTo(node._id),className:\"comment-reply-btn\",children:\"Reply\"}),node.userId===currentUser.uid&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setEditingId(node._id);setEditText(node.text);},className:\"comment-edit-btn\",children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteComment(node._id),className:\"comment-delete-btn\",children:\"Delete\"})]})]})]}),replyTo===node._id&&/*#__PURE__*/_jsx(ReplyForm,{parentId:node._id,onSubmit:postComment,onCancel:()=>setReplyTo(null)}),node.replies.length>0&&/*#__PURE__*/_jsx(\"ul\",{children:node.replies.map(child=>/*#__PURE__*/_jsx(CommentNode,{node:child,depth:depth+1},child._id))})]});};// 7. Render\nif(loading)return/*#__PURE__*/_jsx(\"p\",{className:\"comments-loading\",children:\"Loading comments\\u2026\"});if(error)return/*#__PURE__*/_jsx(\"p\",{className:\"comments-error\",children:error});return/*#__PURE__*/_jsxs(\"div\",{className:\"comments-section\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"comments-title\",children:\"Comments\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"comment-form\",onSubmit:e=>{e.preventDefault();postComment(newText,null);},children:[/*#__PURE__*/_jsx(\"textarea\",{className:\"comment-input\",rows:\"3\",placeholder:\"Add a comment\\u2026\",value:newText,onChange:e=>setNewText(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:!newText.trim(),className:\"comment-submit-btn\",children:\"Post\"})]}),/*#__PURE__*/_jsx(\"ul\",{className:\"comment-list\",children:commentsTree.map(node=>/*#__PURE__*/_jsx(CommentNode,{node:node},node._id))})]});}","map":{"version":3,"names":["React","useState","useEffect","useAuth","api","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ReplyForm","_ref","parentId","onSubmit","onCancel","text","setText","handleSubmit","e","preventDefault","className","children","rows","placeholder","value","onChange","target","type","onClick","Comments","_ref2","itemId","currentUser","flatComments","setFlatComments","commentsTree","setCommentsTree","loading","setLoading","error","setError","newText","setNewText","replyTo","setReplyTo","editingId","setEditingId","editText","setEditText","buildTree","list","map","forEach","c","_id","replies","roots","push","fetchComments","resp","get","params","data","postComment","arguments","length","undefined","trim","token","getIdToken","post","headers","Authorization","updateComment","put","deleteComment","id","delete","CommentNode","_ref3","node","depth","style","marginLeft","email","split","Date","createdAt","toLocaleString","userId","uid","child","disabled"],"sources":["D:/CoSchedule/coschedule_frontend/src/components/Comments.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../auth/AuthProvider';\r\nimport api from '../api';\r\nimport './Comments.css';\r\n\r\n// ReplyForm component to isolate reply input state\r\nconst ReplyForm = ({ parentId, onSubmit, onCancel }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(text, parentId);\r\n    setText('');\r\n  };\r\n\r\n  return (\r\n    <form className=\"reply-form\" onSubmit={handleSubmit}>\r\n      <textarea\r\n        className=\"comment-input\"\r\n        rows=\"2\"\r\n        placeholder=\"Write a reply…\"\r\n        value={text}\r\n        onChange={e => setText(e.target.value)}\r\n      />\r\n      <div className=\"comment-actions\">\r\n        <button type=\"submit\" className=\"comment-save-btn\">\r\n          Post Reply\r\n        </button>\r\n        <button type=\"button\" onClick={onCancel} className=\"comment-cancel-btn\">\r\n          Cancel\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default function Comments({ itemId }) {\r\n  const { currentUser } = useAuth();\r\n\r\n  // flat list & tree\r\n  const [flatComments, setFlatComments] = useState([]);\r\n  const [commentsTree, setCommentsTree] = useState([]);\r\n\r\n  // UI state\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  // new top-level comment\r\n  const [newText, setNewText] = useState('');\r\n\r\n  // replies: which comment we’re replying to\r\n  const [replyTo, setReplyTo] = useState(null);\r\n\r\n  // editing existing comment\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [editText, setEditText] = useState('');\r\n\r\n  // 1. Build nested tree from flat list\r\n  const buildTree = list => {\r\n    const map = {};\r\n    list.forEach(c => { map[c._id] = { ...c, replies: [] }; });\r\n    const roots = [];\r\n    list.forEach(c => {\r\n      if (c.parentId && map[c.parentId]) {\r\n        map[c.parentId].replies.push(map[c._id]);\r\n      } else {\r\n        roots.push(map[c._id]);\r\n      }\r\n    });\r\n    return roots;\r\n  };\r\n\r\n  // 2. Fetch flat comments & build tree\r\n  const fetchComments = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    try {\r\n      const resp = await api.get('/comments', { params: { itemId } });\r\n      setFlatComments(resp.data);\r\n      setCommentsTree(buildTree(resp.data));\r\n    } catch {\r\n      setError('Could not load comments');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, [itemId]);\r\n\r\n  // 3. Post (new or reply)\r\n  const postComment = async (text, parentId = null) => {\r\n    if (!text.trim()) return;\r\n    try {\r\n      const token = await currentUser.getIdToken();\r\n      await api.post(\r\n        '/comments',\r\n        { itemId, text, parentId },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      // clear appropriate field\r\n      if (parentId) {\r\n        setReplyTo(null);\r\n      } else {\r\n        setNewText('');\r\n      }\r\n      fetchComments();\r\n    } catch {\r\n      setError('Could not post comment');\r\n    }\r\n  };\r\n\r\n  // 4. Update\r\n  const updateComment = async () => {\r\n    if (!editText.trim()) return;\r\n    try {\r\n      const token = await currentUser.getIdToken();\r\n      await api.put(\r\n        `/comments/${editingId}`,\r\n        { text: editText },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      setEditingId(null);\r\n      setEditText('');\r\n      fetchComments();\r\n    } catch {\r\n      setError('Could not update comment');\r\n    }\r\n  };\r\n\r\n  // 5. Delete\r\n  const deleteComment = async id => {\r\n    try {\r\n      const token = await currentUser.getIdToken();\r\n      await api.delete(`/comments/${id}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      fetchComments();\r\n    } catch {\r\n      setError('Could not delete comment');\r\n    }\r\n  };\r\n\r\n  // 6. Recursive node\r\n  const CommentNode = ({ node, depth = 0 }) => (\r\n    <li className=\"comment-card\" style={{ marginLeft: depth * 16 }}>\r\n      {/* Edit mode */}\r\n      {editingId === node._id ? (\r\n        <div className=\"comment-body\">\r\n          <textarea\r\n            className=\"comment-input\"\r\n            rows=\"2\"\r\n            value={editText}\r\n            onChange={e => setEditText(e.target.value)}\r\n          />\r\n          <div className=\"comment-actions\">\r\n            <button onClick={updateComment} className=\"comment-save-btn\">\r\n              Save\r\n            </button>\r\n            <button\r\n              onClick={() => setEditingId(null)}\r\n              className=\"comment-cancel-btn\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"comment-body\">\r\n          <span className=\"comment-author\">\r\n            {currentUser.email.split('@')[0]}\r\n          </span>\r\n          <p className=\"comment-text\">{node.text}</p>\r\n          <div className=\"comment-meta\">\r\n            <span className=\"comment-time\">\r\n              {new Date(node.createdAt).toLocaleString()}\r\n            </span>\r\n          </div>\r\n          <div className=\"comment-actions\">\r\n            <button\r\n              onClick={() => setReplyTo(node._id)}\r\n              className=\"comment-reply-btn\"\r\n            >\r\n              Reply\r\n            </button>\r\n            {node.userId === currentUser.uid && (\r\n              <>\r\n                <button\r\n                  onClick={() => {\r\n                    setEditingId(node._id);\r\n                    setEditText(node.text);\r\n                  }}\r\n                  className=\"comment-edit-btn\"\r\n                >\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  onClick={() => deleteComment(node._id)}\r\n                  className=\"comment-delete-btn\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Reply form */}\r\n      {replyTo === node._id && (\r\n        <ReplyForm\r\n          parentId={node._id}\r\n          onSubmit={postComment}\r\n          onCancel={() => setReplyTo(null)}\r\n        />\r\n      )}\r\n\r\n      {/* Children */}\r\n      {node.replies.length > 0 && (\r\n        <ul>\r\n          {node.replies.map(child => (\r\n            <CommentNode key={child._id} node={child} depth={depth + 1} />\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </li>\r\n  );\r\n\r\n  // 7. Render\r\n  if (loading) return <p className=\"comments-loading\">Loading comments…</p>;\r\n  if (error) return <p className=\"comments-error\">{error}</p>;\r\n\r\n  return (\r\n    <div className=\"comments-section\">\r\n      <h4 className=\"comments-title\">Comments</h4>\r\n\r\n      {/* New comment */}\r\n      <form\r\n        className=\"comment-form\"\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          postComment(newText, null);\r\n        }}\r\n      >\r\n        <textarea\r\n          className=\"comment-input\"\r\n          rows=\"3\"\r\n          placeholder=\"Add a comment…\"\r\n          value={newText}\r\n          onChange={e => setNewText(e.target.value)}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          disabled={!newText.trim()}\r\n          className=\"comment-submit-btn\"\r\n        >\r\n          Post\r\n        </button>\r\n      </form>\r\n\r\n      {/* Threaded list */}\r\n      <ul className=\"comment-list\">\r\n        {commentsTree.map(node => (\r\n          <CommentNode key={node._id} node={node} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}