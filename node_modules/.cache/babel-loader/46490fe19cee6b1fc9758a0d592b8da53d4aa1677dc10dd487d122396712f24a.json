{"ast":null,"code":"var _jsxFileName = \"D:\\\\CoSchedule\\\\coschedule_frontend\\\\src\\\\components\\\\StoryList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function StoryList() {\n  _s();\n  const [stories, setStories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchStories = async () => {\n      try {\n        // default limit 10; you can parametrize later\n        const resp = await api.get('/topstories?limit=10');\n        setStories(resp.data);\n      } catch (err) {\n        console.error(err);\n        setError('Could not load stories.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchStories();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading stories\\u2026\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-red-600\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-4\",\n    children: stories.map(story => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: story.url,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"text-lg font-semibold hover:underline\",\n        children: story.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600\",\n        children: [\"by \", story.by, \" \\u2014 \", story.score, \" points\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, story.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(StoryList, \"xO6z+rBTY1hawXNAqWk6dZjSdxs=\");\n_c = StoryList;\nvar _c;\n$RefreshReg$(_c, \"StoryList\");","map":{"version":3,"names":["React","useEffect","useState","api","jsxDEV","_jsxDEV","StoryList","_s","stories","setStories","loading","setLoading","error","setError","fetchStories","resp","get","data","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","story","href","url","target","rel","title","by","score","id","_c","$RefreshReg$"],"sources":["D:/CoSchedule/coschedule_frontend/src/components/StoryList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport api from '../api';\r\n\r\nexport default function StoryList() {\r\n  const [stories, setStories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError]     = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchStories = async () => {\r\n      try {\r\n        // default limit 10; you can parametrize later\r\n        const resp = await api.get('/topstories?limit=10');\r\n        setStories(resp.data);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setError('Could not load stories.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchStories();\r\n  }, []);\r\n\r\n  if (loading) return <p>Loading stories…</p>;\r\n  if (error)   return <p className=\"text-red-600\">{error}</p>;\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {stories.map(story => (\r\n        <div key={story.id} className=\"p-4 border rounded\">\r\n          <a\r\n            href={story.url}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            className=\"text-lg font-semibold hover:underline\"\r\n          >\r\n            {story.title}\r\n          </a>\r\n          <p className=\"text-sm text-gray-600\">\r\n            by {story.by} — {story.score} points\r\n          </p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAOX,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF;QACA,MAAMC,IAAI,GAAG,MAAMZ,GAAG,CAACa,GAAG,CAAC,sBAAsB,CAAC;QAClDP,UAAU,CAACM,IAAI,CAACE,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACP,KAAK,CAACM,GAAG,CAAC;QAClBL,QAAQ,CAAC,yBAAyB,CAAC;MACrC,CAAC,SAAS;QACRF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,OAAO,EAAE,oBAAOL,OAAA;IAAAe,QAAA,EAAG;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC3C,IAAIZ,KAAK,EAAI,oBAAOP,OAAA;IAAGoB,SAAS,EAAC,cAAc;IAAAL,QAAA,EAAER;EAAK;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAE3D,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAL,QAAA,EACvBZ,OAAO,CAACkB,GAAG,CAACC,KAAK,iBAChBtB,OAAA;MAAoBoB,SAAS,EAAC,oBAAoB;MAAAL,QAAA,gBAChDf,OAAA;QACEuB,IAAI,EAAED,KAAK,CAACE,GAAI;QAChBC,MAAM,EAAC,QAAQ;QACfC,GAAG,EAAC,qBAAqB;QACzBN,SAAS,EAAC,uCAAuC;QAAAL,QAAA,EAEhDO,KAAK,CAACK;MAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACJnB,OAAA;QAAGoB,SAAS,EAAC,uBAAuB;QAAAL,QAAA,GAAC,KAChC,EAACO,KAAK,CAACM,EAAE,EAAC,UAAG,EAACN,KAAK,CAACO,KAAK,EAAC,SAC/B;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,GAXIG,KAAK,CAACQ,EAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYb,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACjB,EAAA,CA3CuBD,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}